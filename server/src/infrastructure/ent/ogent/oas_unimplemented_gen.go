// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// AddUser implements addUser operation.
//
// PATCH /organizations/{id}/addUser
func (UnimplementedHandler) AddUser(ctx context.Context, params AddUserParams) error {
	return ht.ErrNotImplemented
}

// CreateComment implements createComment operation.
//
// Creates a new Comment and persists it to storage.
//
// POST /comments
func (UnimplementedHandler) CreateComment(ctx context.Context, req *CreateCommentReq) (r CreateCommentRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateEvent implements createEvent operation.
//
// Creates a new Event and persists it to storage.
//
// POST /events
func (UnimplementedHandler) CreateEvent(ctx context.Context, req *CreateEventReq) (r CreateEventRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateUser implements createUser operation.
//
// Creates a new User and persists it to storage.
//
// POST /users
func (UnimplementedHandler) CreateUser(ctx context.Context, req *CreateUserReq) (r CreateUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteComment implements deleteComment operation.
//
// Deletes the Comment with the requested ID.
//
// DELETE /comments/{id}
func (UnimplementedHandler) DeleteComment(ctx context.Context, params DeleteCommentParams) (r DeleteCommentRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteEvent implements deleteEvent operation.
//
// Deletes the Event with the requested ID.
//
// DELETE /events/{id}
func (UnimplementedHandler) DeleteEvent(ctx context.Context, params DeleteEventParams) (r DeleteEventRes, _ error) {
	return r, ht.ErrNotImplemented
}

// DeleteUser implements deleteUser operation.
//
// Deletes the User with the requested ID.
//
// DELETE /users/{id}
func (UnimplementedHandler) DeleteUser(ctx context.Context, params DeleteUserParams) (r DeleteUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListComment implements listComment operation.
//
// List Comments.
//
// GET /comments
func (UnimplementedHandler) ListComment(ctx context.Context, params ListCommentParams) (r ListCommentRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListEvent implements listEvent operation.
//
// List Events.
//
// GET /events
func (UnimplementedHandler) ListEvent(ctx context.Context, params ListEventParams) (r ListEventRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListEventUsers implements listEventUsers operation.
//
// List attached Users.
//
// GET /events/{id}/users
func (UnimplementedHandler) ListEventUsers(ctx context.Context, params ListEventUsersParams) (r ListEventUsersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUser implements listUser operation.
//
// List Users.
//
// GET /users
func (UnimplementedHandler) ListUser(ctx context.Context, params ListUserParams) (r ListUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ListUserEvents implements listUserEvents operation.
//
// List attached Events.
//
// GET /users/{id}/events
func (UnimplementedHandler) ListUserEvents(ctx context.Context, params ListUserEventsParams) (r ListUserEventsRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadComment implements readComment operation.
//
// Finds the Comment with the requested ID and returns it.
//
// GET /comments/{id}
func (UnimplementedHandler) ReadComment(ctx context.Context, params ReadCommentParams) (r ReadCommentRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadCommentEvent implements readCommentEvent operation.
//
// Find the attached Event of the Comment with the given ID.
//
// GET /comments/{id}/event
func (UnimplementedHandler) ReadCommentEvent(ctx context.Context, params ReadCommentEventParams) (r ReadCommentEventRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadCommentUser implements readCommentUser operation.
//
// Find the attached User of the Comment with the given ID.
//
// GET /comments/{id}/user
func (UnimplementedHandler) ReadCommentUser(ctx context.Context, params ReadCommentUserParams) (r ReadCommentUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadEvent implements readEvent operation.
//
// Finds the Event with the requested ID and returns it.
//
// GET /events/{id}
func (UnimplementedHandler) ReadEvent(ctx context.Context, params ReadEventParams) (r ReadEventRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadEventAdmin implements readEventAdmin operation.
//
// Find the attached User of the Event with the given ID.
//
// GET /events/{id}/admin
func (UnimplementedHandler) ReadEventAdmin(ctx context.Context, params ReadEventAdminParams) (r ReadEventAdminRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ReadUser implements readUser operation.
//
// Finds the User with the requested ID and returns it.
//
// GET /users/{id}
func (UnimplementedHandler) ReadUser(ctx context.Context, params ReadUserParams) (r ReadUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateComment implements updateComment operation.
//
// Updates a Comment and persists changes to storage.
//
// PATCH /comments/{id}
func (UnimplementedHandler) UpdateComment(ctx context.Context, req *UpdateCommentReq, params UpdateCommentParams) (r UpdateCommentRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateEvent implements updateEvent operation.
//
// Updates a Event and persists changes to storage.
//
// PATCH /events/{id}
func (UnimplementedHandler) UpdateEvent(ctx context.Context, req *UpdateEventReq, params UpdateEventParams) (r UpdateEventRes, _ error) {
	return r, ht.ErrNotImplemented
}

// UpdateUser implements updateUser operation.
//
// Updates a User and persists changes to storage.
//
// PATCH /users/{id}
func (UnimplementedHandler) UpdateUser(ctx context.Context, req *UpdateUserReq, params UpdateUserParams) (r UpdateUserRes, _ error) {
	return r, ht.ErrNotImplemented
}
