// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"github.com/go-faster/jx"
	"github.com/google/uuid"
)

// AddUserOK is response for AddUser operation.
type AddUserOK struct{}

// Ref: #/components/schemas/CommentCreate
type CommentCreate struct {
	ID   uuid.UUID `json:"id"`
	Body string    `json:"body"`
}

// GetID returns the value of ID.
func (s *CommentCreate) GetID() uuid.UUID {
	return s.ID
}

// GetBody returns the value of Body.
func (s *CommentCreate) GetBody() string {
	return s.Body
}

// SetID sets the value of ID.
func (s *CommentCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetBody sets the value of Body.
func (s *CommentCreate) SetBody(val string) {
	s.Body = val
}

func (*CommentCreate) createCommentRes() {}

// Ref: #/components/schemas/Comment_EventRead
type CommentEventRead struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
	Type     string    `json:"type"`
	State    string    `json:"state"`
}

// GetID returns the value of ID.
func (s *CommentEventRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CommentEventRead) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *CommentEventRead) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *CommentEventRead) GetLocation() OptString {
	return s.Location
}

// GetType returns the value of Type.
func (s *CommentEventRead) GetType() string {
	return s.Type
}

// GetState returns the value of State.
func (s *CommentEventRead) GetState() string {
	return s.State
}

// SetID sets the value of ID.
func (s *CommentEventRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CommentEventRead) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *CommentEventRead) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *CommentEventRead) SetLocation(val OptString) {
	s.Location = val
}

// SetType sets the value of Type.
func (s *CommentEventRead) SetType(val string) {
	s.Type = val
}

// SetState sets the value of State.
func (s *CommentEventRead) SetState(val string) {
	s.State = val
}

func (*CommentEventRead) readCommentEventRes() {}

// Ref: #/components/schemas/CommentList
type CommentList struct {
	ID   uuid.UUID `json:"id"`
	Body string    `json:"body"`
}

// GetID returns the value of ID.
func (s *CommentList) GetID() uuid.UUID {
	return s.ID
}

// GetBody returns the value of Body.
func (s *CommentList) GetBody() string {
	return s.Body
}

// SetID sets the value of ID.
func (s *CommentList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetBody sets the value of Body.
func (s *CommentList) SetBody(val string) {
	s.Body = val
}

// Ref: #/components/schemas/CommentRead
type CommentRead struct {
	ID   uuid.UUID `json:"id"`
	Body string    `json:"body"`
}

// GetID returns the value of ID.
func (s *CommentRead) GetID() uuid.UUID {
	return s.ID
}

// GetBody returns the value of Body.
func (s *CommentRead) GetBody() string {
	return s.Body
}

// SetID sets the value of ID.
func (s *CommentRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetBody sets the value of Body.
func (s *CommentRead) SetBody(val string) {
	s.Body = val
}

func (*CommentRead) readCommentRes() {}

// Ref: #/components/schemas/CommentUpdate
type CommentUpdate struct {
	ID   uuid.UUID `json:"id"`
	Body string    `json:"body"`
}

// GetID returns the value of ID.
func (s *CommentUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetBody returns the value of Body.
func (s *CommentUpdate) GetBody() string {
	return s.Body
}

// SetID sets the value of ID.
func (s *CommentUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetBody sets the value of Body.
func (s *CommentUpdate) SetBody(val string) {
	s.Body = val
}

func (*CommentUpdate) updateCommentRes() {}

// Ref: #/components/schemas/Comment_UserRead
type CommentUserRead struct {
	ID            uuid.UUID `json:"id"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *CommentUserRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *CommentUserRead) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *CommentUserRead) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *CommentUserRead) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *CommentUserRead) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *CommentUserRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *CommentUserRead) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *CommentUserRead) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *CommentUserRead) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *CommentUserRead) SetIcon(val string) {
	s.Icon = val
}

func (*CommentUserRead) readCommentUserRes() {}

type CreateCommentReq struct {
	Body  string    `json:"body"`
	Event uuid.UUID `json:"event"`
	User  uuid.UUID `json:"user"`
}

// GetBody returns the value of Body.
func (s *CreateCommentReq) GetBody() string {
	return s.Body
}

// GetEvent returns the value of Event.
func (s *CreateCommentReq) GetEvent() uuid.UUID {
	return s.Event
}

// GetUser returns the value of User.
func (s *CreateCommentReq) GetUser() uuid.UUID {
	return s.User
}

// SetBody sets the value of Body.
func (s *CreateCommentReq) SetBody(val string) {
	s.Body = val
}

// SetEvent sets the value of Event.
func (s *CreateCommentReq) SetEvent(val uuid.UUID) {
	s.Event = val
}

// SetUser sets the value of User.
func (s *CreateCommentReq) SetUser(val uuid.UUID) {
	s.User = val
}

type CreateEventReq struct {
	Name     string      `json:"name"`
	Detail   OptString   `json:"detail"`
	Location OptString   `json:"location"`
	Type     string      `json:"type"`
	State    string      `json:"state"`
	Admin    OptUUID     `json:"admin"`
	Users    []uuid.UUID `json:"users"`
}

// GetName returns the value of Name.
func (s *CreateEventReq) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *CreateEventReq) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *CreateEventReq) GetLocation() OptString {
	return s.Location
}

// GetType returns the value of Type.
func (s *CreateEventReq) GetType() string {
	return s.Type
}

// GetState returns the value of State.
func (s *CreateEventReq) GetState() string {
	return s.State
}

// GetAdmin returns the value of Admin.
func (s *CreateEventReq) GetAdmin() OptUUID {
	return s.Admin
}

// GetUsers returns the value of Users.
func (s *CreateEventReq) GetUsers() []uuid.UUID {
	return s.Users
}

// SetName sets the value of Name.
func (s *CreateEventReq) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *CreateEventReq) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *CreateEventReq) SetLocation(val OptString) {
	s.Location = val
}

// SetType sets the value of Type.
func (s *CreateEventReq) SetType(val string) {
	s.Type = val
}

// SetState sets the value of State.
func (s *CreateEventReq) SetState(val string) {
	s.State = val
}

// SetAdmin sets the value of Admin.
func (s *CreateEventReq) SetAdmin(val OptUUID) {
	s.Admin = val
}

// SetUsers sets the value of Users.
func (s *CreateEventReq) SetUsers(val []uuid.UUID) {
	s.Users = val
}

type CreateUserReq struct {
	Name          string      `json:"name"`
	Authenticated bool        `json:"authenticated"`
	Mail          OptString   `json:"mail"`
	Icon          string      `json:"icon"`
	Events        []uuid.UUID `json:"events"`
}

// GetName returns the value of Name.
func (s *CreateUserReq) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *CreateUserReq) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *CreateUserReq) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *CreateUserReq) GetIcon() string {
	return s.Icon
}

// GetEvents returns the value of Events.
func (s *CreateUserReq) GetEvents() []uuid.UUID {
	return s.Events
}

// SetName sets the value of Name.
func (s *CreateUserReq) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *CreateUserReq) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *CreateUserReq) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *CreateUserReq) SetIcon(val string) {
	s.Icon = val
}

// SetEvents sets the value of Events.
func (s *CreateUserReq) SetEvents(val []uuid.UUID) {
	s.Events = val
}

// DeleteCommentNoContent is response for DeleteComment operation.
type DeleteCommentNoContent struct{}

func (*DeleteCommentNoContent) deleteCommentRes() {}

// DeleteEventNoContent is response for DeleteEvent operation.
type DeleteEventNoContent struct{}

func (*DeleteEventNoContent) deleteEventRes() {}

// DeleteUserNoContent is response for DeleteUser operation.
type DeleteUserNoContent struct{}

func (*DeleteUserNoContent) deleteUserRes() {}

// Ref: #/components/schemas/Event_AdminRead
type EventAdminRead struct {
	ID            uuid.UUID `json:"id"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *EventAdminRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EventAdminRead) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *EventAdminRead) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *EventAdminRead) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *EventAdminRead) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *EventAdminRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EventAdminRead) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *EventAdminRead) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *EventAdminRead) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *EventAdminRead) SetIcon(val string) {
	s.Icon = val
}

func (*EventAdminRead) readEventAdminRes() {}

// Ref: #/components/schemas/EventCreate
type EventCreate struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
	Type     string    `json:"type"`
	State    string    `json:"state"`
}

// GetID returns the value of ID.
func (s *EventCreate) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EventCreate) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *EventCreate) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *EventCreate) GetLocation() OptString {
	return s.Location
}

// GetType returns the value of Type.
func (s *EventCreate) GetType() string {
	return s.Type
}

// GetState returns the value of State.
func (s *EventCreate) GetState() string {
	return s.State
}

// SetID sets the value of ID.
func (s *EventCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EventCreate) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *EventCreate) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *EventCreate) SetLocation(val OptString) {
	s.Location = val
}

// SetType sets the value of Type.
func (s *EventCreate) SetType(val string) {
	s.Type = val
}

// SetState sets the value of State.
func (s *EventCreate) SetState(val string) {
	s.State = val
}

func (*EventCreate) createEventRes() {}

// Ref: #/components/schemas/EventList
type EventList struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
	Type     string    `json:"type"`
	State    string    `json:"state"`
}

// GetID returns the value of ID.
func (s *EventList) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EventList) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *EventList) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *EventList) GetLocation() OptString {
	return s.Location
}

// GetType returns the value of Type.
func (s *EventList) GetType() string {
	return s.Type
}

// GetState returns the value of State.
func (s *EventList) GetState() string {
	return s.State
}

// SetID sets the value of ID.
func (s *EventList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EventList) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *EventList) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *EventList) SetLocation(val OptString) {
	s.Location = val
}

// SetType sets the value of Type.
func (s *EventList) SetType(val string) {
	s.Type = val
}

// SetState sets the value of State.
func (s *EventList) SetState(val string) {
	s.State = val
}

// Ref: #/components/schemas/EventRead
type EventRead struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
	Type     string    `json:"type"`
	State    string    `json:"state"`
}

// GetID returns the value of ID.
func (s *EventRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EventRead) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *EventRead) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *EventRead) GetLocation() OptString {
	return s.Location
}

// GetType returns the value of Type.
func (s *EventRead) GetType() string {
	return s.Type
}

// GetState returns the value of State.
func (s *EventRead) GetState() string {
	return s.State
}

// SetID sets the value of ID.
func (s *EventRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EventRead) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *EventRead) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *EventRead) SetLocation(val OptString) {
	s.Location = val
}

// SetType sets the value of Type.
func (s *EventRead) SetType(val string) {
	s.Type = val
}

// SetState sets the value of State.
func (s *EventRead) SetState(val string) {
	s.State = val
}

func (*EventRead) readEventRes() {}

// Ref: #/components/schemas/EventUpdate
type EventUpdate struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
	Type     string    `json:"type"`
	State    string    `json:"state"`
}

// GetID returns the value of ID.
func (s *EventUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EventUpdate) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *EventUpdate) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *EventUpdate) GetLocation() OptString {
	return s.Location
}

// GetType returns the value of Type.
func (s *EventUpdate) GetType() string {
	return s.Type
}

// GetState returns the value of State.
func (s *EventUpdate) GetState() string {
	return s.State
}

// SetID sets the value of ID.
func (s *EventUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EventUpdate) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *EventUpdate) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *EventUpdate) SetLocation(val OptString) {
	s.Location = val
}

// SetType sets the value of Type.
func (s *EventUpdate) SetType(val string) {
	s.Type = val
}

// SetState sets the value of State.
func (s *EventUpdate) SetState(val string) {
	s.State = val
}

func (*EventUpdate) updateEventRes() {}

// Ref: #/components/schemas/Event_UsersList
type EventUsersList struct {
	ID            uuid.UUID `json:"id"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *EventUsersList) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EventUsersList) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *EventUsersList) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *EventUsersList) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *EventUsersList) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *EventUsersList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EventUsersList) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *EventUsersList) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *EventUsersList) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *EventUsersList) SetIcon(val string) {
	s.Icon = val
}

type ListCommentOKApplicationJSON []CommentList

func (ListCommentOKApplicationJSON) listCommentRes() {}

type ListEventOKApplicationJSON []EventList

func (ListEventOKApplicationJSON) listEventRes() {}

type ListEventUsersOKApplicationJSON []EventUsersList

func (ListEventUsersOKApplicationJSON) listEventUsersRes() {}

type ListUserEventsOKApplicationJSON []UserEventsList

func (ListUserEventsOKApplicationJSON) listUserEventsRes() {}

type ListUserOKApplicationJSON []UserList

func (ListUserOKApplicationJSON) listUserRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type R400 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R400) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R400) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R400) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R400) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R400) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R400) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R400) createCommentRes()    {}
func (*R400) createEventRes()      {}
func (*R400) createUserRes()       {}
func (*R400) deleteCommentRes()    {}
func (*R400) deleteEventRes()      {}
func (*R400) deleteUserRes()       {}
func (*R400) listCommentRes()      {}
func (*R400) listEventRes()        {}
func (*R400) listEventUsersRes()   {}
func (*R400) listUserEventsRes()   {}
func (*R400) listUserRes()         {}
func (*R400) readCommentEventRes() {}
func (*R400) readCommentRes()      {}
func (*R400) readCommentUserRes()  {}
func (*R400) readEventAdminRes()   {}
func (*R400) readEventRes()        {}
func (*R400) readUserRes()         {}
func (*R400) updateCommentRes()    {}
func (*R400) updateEventRes()      {}
func (*R400) updateUserRes()       {}

type R404 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R404) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R404) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R404) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R404) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R404) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R404) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R404) deleteCommentRes()    {}
func (*R404) deleteEventRes()      {}
func (*R404) deleteUserRes()       {}
func (*R404) listCommentRes()      {}
func (*R404) listEventRes()        {}
func (*R404) listEventUsersRes()   {}
func (*R404) listUserEventsRes()   {}
func (*R404) listUserRes()         {}
func (*R404) readCommentEventRes() {}
func (*R404) readCommentRes()      {}
func (*R404) readCommentUserRes()  {}
func (*R404) readEventAdminRes()   {}
func (*R404) readEventRes()        {}
func (*R404) readUserRes()         {}
func (*R404) updateCommentRes()    {}
func (*R404) updateEventRes()      {}
func (*R404) updateUserRes()       {}

type R409 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R409) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R409) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R409) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R409) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R409) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R409) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R409) createCommentRes()    {}
func (*R409) createEventRes()      {}
func (*R409) createUserRes()       {}
func (*R409) deleteCommentRes()    {}
func (*R409) deleteEventRes()      {}
func (*R409) deleteUserRes()       {}
func (*R409) listCommentRes()      {}
func (*R409) listEventRes()        {}
func (*R409) listEventUsersRes()   {}
func (*R409) listUserEventsRes()   {}
func (*R409) listUserRes()         {}
func (*R409) readCommentEventRes() {}
func (*R409) readCommentRes()      {}
func (*R409) readCommentUserRes()  {}
func (*R409) readEventAdminRes()   {}
func (*R409) readEventRes()        {}
func (*R409) readUserRes()         {}
func (*R409) updateCommentRes()    {}
func (*R409) updateEventRes()      {}
func (*R409) updateUserRes()       {}

type R500 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R500) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R500) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R500) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R500) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R500) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R500) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R500) createCommentRes()    {}
func (*R500) createEventRes()      {}
func (*R500) createUserRes()       {}
func (*R500) deleteCommentRes()    {}
func (*R500) deleteEventRes()      {}
func (*R500) deleteUserRes()       {}
func (*R500) listCommentRes()      {}
func (*R500) listEventRes()        {}
func (*R500) listEventUsersRes()   {}
func (*R500) listUserEventsRes()   {}
func (*R500) listUserRes()         {}
func (*R500) readCommentEventRes() {}
func (*R500) readCommentRes()      {}
func (*R500) readCommentUserRes()  {}
func (*R500) readEventAdminRes()   {}
func (*R500) readEventRes()        {}
func (*R500) readUserRes()         {}
func (*R500) updateCommentRes()    {}
func (*R500) updateEventRes()      {}
func (*R500) updateUserRes()       {}

type UpdateCommentReq struct {
	Body  OptString `json:"body"`
	Event OptUUID   `json:"event"`
	User  OptUUID   `json:"user"`
}

// GetBody returns the value of Body.
func (s *UpdateCommentReq) GetBody() OptString {
	return s.Body
}

// GetEvent returns the value of Event.
func (s *UpdateCommentReq) GetEvent() OptUUID {
	return s.Event
}

// GetUser returns the value of User.
func (s *UpdateCommentReq) GetUser() OptUUID {
	return s.User
}

// SetBody sets the value of Body.
func (s *UpdateCommentReq) SetBody(val OptString) {
	s.Body = val
}

// SetEvent sets the value of Event.
func (s *UpdateCommentReq) SetEvent(val OptUUID) {
	s.Event = val
}

// SetUser sets the value of User.
func (s *UpdateCommentReq) SetUser(val OptUUID) {
	s.User = val
}

type UpdateEventReq struct {
	Name     OptString   `json:"name"`
	Detail   OptString   `json:"detail"`
	Location OptString   `json:"location"`
	Type     OptString   `json:"type"`
	State    OptString   `json:"state"`
	Admin    OptUUID     `json:"admin"`
	Users    []uuid.UUID `json:"users"`
}

// GetName returns the value of Name.
func (s *UpdateEventReq) GetName() OptString {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *UpdateEventReq) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *UpdateEventReq) GetLocation() OptString {
	return s.Location
}

// GetType returns the value of Type.
func (s *UpdateEventReq) GetType() OptString {
	return s.Type
}

// GetState returns the value of State.
func (s *UpdateEventReq) GetState() OptString {
	return s.State
}

// GetAdmin returns the value of Admin.
func (s *UpdateEventReq) GetAdmin() OptUUID {
	return s.Admin
}

// GetUsers returns the value of Users.
func (s *UpdateEventReq) GetUsers() []uuid.UUID {
	return s.Users
}

// SetName sets the value of Name.
func (s *UpdateEventReq) SetName(val OptString) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *UpdateEventReq) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *UpdateEventReq) SetLocation(val OptString) {
	s.Location = val
}

// SetType sets the value of Type.
func (s *UpdateEventReq) SetType(val OptString) {
	s.Type = val
}

// SetState sets the value of State.
func (s *UpdateEventReq) SetState(val OptString) {
	s.State = val
}

// SetAdmin sets the value of Admin.
func (s *UpdateEventReq) SetAdmin(val OptUUID) {
	s.Admin = val
}

// SetUsers sets the value of Users.
func (s *UpdateEventReq) SetUsers(val []uuid.UUID) {
	s.Users = val
}

type UpdateUserReq struct {
	Name          OptString   `json:"name"`
	Authenticated OptBool     `json:"authenticated"`
	Mail          OptString   `json:"mail"`
	Icon          OptString   `json:"icon"`
	Events        []uuid.UUID `json:"events"`
}

// GetName returns the value of Name.
func (s *UpdateUserReq) GetName() OptString {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *UpdateUserReq) GetAuthenticated() OptBool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *UpdateUserReq) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *UpdateUserReq) GetIcon() OptString {
	return s.Icon
}

// GetEvents returns the value of Events.
func (s *UpdateUserReq) GetEvents() []uuid.UUID {
	return s.Events
}

// SetName sets the value of Name.
func (s *UpdateUserReq) SetName(val OptString) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *UpdateUserReq) SetAuthenticated(val OptBool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *UpdateUserReq) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *UpdateUserReq) SetIcon(val OptString) {
	s.Icon = val
}

// SetEvents sets the value of Events.
func (s *UpdateUserReq) SetEvents(val []uuid.UUID) {
	s.Events = val
}

// Ref: #/components/schemas/UserCreate
type UserCreate struct {
	ID            uuid.UUID `json:"id"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *UserCreate) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserCreate) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *UserCreate) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *UserCreate) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *UserCreate) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *UserCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserCreate) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *UserCreate) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *UserCreate) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *UserCreate) SetIcon(val string) {
	s.Icon = val
}

func (*UserCreate) createUserRes() {}

// Ref: #/components/schemas/User_EventsList
type UserEventsList struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
	Type     string    `json:"type"`
	State    string    `json:"state"`
}

// GetID returns the value of ID.
func (s *UserEventsList) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserEventsList) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *UserEventsList) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *UserEventsList) GetLocation() OptString {
	return s.Location
}

// GetType returns the value of Type.
func (s *UserEventsList) GetType() string {
	return s.Type
}

// GetState returns the value of State.
func (s *UserEventsList) GetState() string {
	return s.State
}

// SetID sets the value of ID.
func (s *UserEventsList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserEventsList) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *UserEventsList) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *UserEventsList) SetLocation(val OptString) {
	s.Location = val
}

// SetType sets the value of Type.
func (s *UserEventsList) SetType(val string) {
	s.Type = val
}

// SetState sets the value of State.
func (s *UserEventsList) SetState(val string) {
	s.State = val
}

// Ref: #/components/schemas/UserList
type UserList struct {
	ID            uuid.UUID `json:"id"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *UserList) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserList) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *UserList) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *UserList) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *UserList) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *UserList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserList) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *UserList) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *UserList) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *UserList) SetIcon(val string) {
	s.Icon = val
}

// Ref: #/components/schemas/UserRead
type UserRead struct {
	ID            uuid.UUID `json:"id"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *UserRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserRead) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *UserRead) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *UserRead) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *UserRead) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *UserRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserRead) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *UserRead) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *UserRead) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *UserRead) SetIcon(val string) {
	s.Icon = val
}

func (*UserRead) readUserRes() {}

// Ref: #/components/schemas/UserUpdate
type UserUpdate struct {
	ID            uuid.UUID `json:"id"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *UserUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserUpdate) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *UserUpdate) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *UserUpdate) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *UserUpdate) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *UserUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserUpdate) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *UserUpdate) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *UserUpdate) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *UserUpdate) SetIcon(val string) {
	s.Icon = val
}

func (*UserUpdate) updateUserRes() {}
