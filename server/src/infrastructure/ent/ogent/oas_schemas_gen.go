// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"github.com/go-faster/jx"
	"github.com/google/uuid"
)

type CreateEStateReq struct {
	Name  string    `json:"name"`
	Event uuid.UUID `json:"event"`
}

// GetName returns the value of Name.
func (s *CreateEStateReq) GetName() string {
	return s.Name
}

// GetEvent returns the value of Event.
func (s *CreateEStateReq) GetEvent() uuid.UUID {
	return s.Event
}

// SetName sets the value of Name.
func (s *CreateEStateReq) SetName(val string) {
	s.Name = val
}

// SetEvent sets the value of Event.
func (s *CreateEStateReq) SetEvent(val uuid.UUID) {
	s.Event = val
}

type CreateETypeReq struct {
	Name  string    `json:"name"`
	Event uuid.UUID `json:"event"`
}

// GetName returns the value of Name.
func (s *CreateETypeReq) GetName() string {
	return s.Name
}

// GetEvent returns the value of Event.
func (s *CreateETypeReq) GetEvent() uuid.UUID {
	return s.Event
}

// SetName sets the value of Name.
func (s *CreateETypeReq) SetName(val string) {
	s.Name = val
}

// SetEvent sets the value of Event.
func (s *CreateETypeReq) SetEvent(val uuid.UUID) {
	s.Event = val
}

type CreateEcommentReq struct {
	Body  string    `json:"body"`
	Event uuid.UUID `json:"event"`
	User  uuid.UUID `json:"user"`
}

// GetBody returns the value of Body.
func (s *CreateEcommentReq) GetBody() string {
	return s.Body
}

// GetEvent returns the value of Event.
func (s *CreateEcommentReq) GetEvent() uuid.UUID {
	return s.Event
}

// GetUser returns the value of User.
func (s *CreateEcommentReq) GetUser() uuid.UUID {
	return s.User
}

// SetBody sets the value of Body.
func (s *CreateEcommentReq) SetBody(val string) {
	s.Body = val
}

// SetEvent sets the value of Event.
func (s *CreateEcommentReq) SetEvent(val uuid.UUID) {
	s.Event = val
}

// SetUser sets the value of User.
func (s *CreateEcommentReq) SetUser(val uuid.UUID) {
	s.User = val
}

type CreateEventReq struct {
	Name     string      `json:"name"`
	Detail   OptString   `json:"detail"`
	Location OptString   `json:"location"`
	State    OptUUID     `json:"state"`
	Type     OptUUID     `json:"type"`
	Admin    OptUUID     `json:"admin"`
	Users    []uuid.UUID `json:"users"`
}

// GetName returns the value of Name.
func (s *CreateEventReq) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *CreateEventReq) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *CreateEventReq) GetLocation() OptString {
	return s.Location
}

// GetState returns the value of State.
func (s *CreateEventReq) GetState() OptUUID {
	return s.State
}

// GetType returns the value of Type.
func (s *CreateEventReq) GetType() OptUUID {
	return s.Type
}

// GetAdmin returns the value of Admin.
func (s *CreateEventReq) GetAdmin() OptUUID {
	return s.Admin
}

// GetUsers returns the value of Users.
func (s *CreateEventReq) GetUsers() []uuid.UUID {
	return s.Users
}

// SetName sets the value of Name.
func (s *CreateEventReq) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *CreateEventReq) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *CreateEventReq) SetLocation(val OptString) {
	s.Location = val
}

// SetState sets the value of State.
func (s *CreateEventReq) SetState(val OptUUID) {
	s.State = val
}

// SetType sets the value of Type.
func (s *CreateEventReq) SetType(val OptUUID) {
	s.Type = val
}

// SetAdmin sets the value of Admin.
func (s *CreateEventReq) SetAdmin(val OptUUID) {
	s.Admin = val
}

// SetUsers sets the value of Users.
func (s *CreateEventReq) SetUsers(val []uuid.UUID) {
	s.Users = val
}

type CreateUserReq struct {
	Age           OptInt      `json:"age"`
	Name          string      `json:"name"`
	Authenticated bool        `json:"authenticated"`
	Mail          OptString   `json:"mail"`
	Icon          string      `json:"icon"`
	Events        []uuid.UUID `json:"events"`
}

// GetAge returns the value of Age.
func (s *CreateUserReq) GetAge() OptInt {
	return s.Age
}

// GetName returns the value of Name.
func (s *CreateUserReq) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *CreateUserReq) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *CreateUserReq) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *CreateUserReq) GetIcon() string {
	return s.Icon
}

// GetEvents returns the value of Events.
func (s *CreateUserReq) GetEvents() []uuid.UUID {
	return s.Events
}

// SetAge sets the value of Age.
func (s *CreateUserReq) SetAge(val OptInt) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *CreateUserReq) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *CreateUserReq) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *CreateUserReq) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *CreateUserReq) SetIcon(val string) {
	s.Icon = val
}

// SetEvents sets the value of Events.
func (s *CreateUserReq) SetEvents(val []uuid.UUID) {
	s.Events = val
}

// DeleteEStateNoContent is response for DeleteEState operation.
type DeleteEStateNoContent struct{}

func (*DeleteEStateNoContent) deleteEStateRes() {}

// DeleteETypeNoContent is response for DeleteEType operation.
type DeleteETypeNoContent struct{}

func (*DeleteETypeNoContent) deleteETypeRes() {}

// DeleteEcommentNoContent is response for DeleteEcomment operation.
type DeleteEcommentNoContent struct{}

func (*DeleteEcommentNoContent) deleteEcommentRes() {}

// DeleteEventNoContent is response for DeleteEvent operation.
type DeleteEventNoContent struct{}

func (*DeleteEventNoContent) deleteEventRes() {}

// DeleteUserNoContent is response for DeleteUser operation.
type DeleteUserNoContent struct{}

func (*DeleteUserNoContent) deleteUserRes() {}

// Ref: #/components/schemas/EStateCreate
type EStateCreate struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

// GetID returns the value of ID.
func (s *EStateCreate) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EStateCreate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *EStateCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EStateCreate) SetName(val string) {
	s.Name = val
}

func (*EStateCreate) createEStateRes() {}

// Ref: #/components/schemas/EState_EventRead
type EStateEventRead struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
}

// GetID returns the value of ID.
func (s *EStateEventRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EStateEventRead) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *EStateEventRead) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *EStateEventRead) GetLocation() OptString {
	return s.Location
}

// SetID sets the value of ID.
func (s *EStateEventRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EStateEventRead) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *EStateEventRead) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *EStateEventRead) SetLocation(val OptString) {
	s.Location = val
}

func (*EStateEventRead) readEStateEventRes() {}

// Ref: #/components/schemas/EStateList
type EStateList struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

// GetID returns the value of ID.
func (s *EStateList) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EStateList) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *EStateList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EStateList) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/EStateRead
type EStateRead struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

// GetID returns the value of ID.
func (s *EStateRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EStateRead) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *EStateRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EStateRead) SetName(val string) {
	s.Name = val
}

func (*EStateRead) readEStateRes() {}

// Ref: #/components/schemas/EStateUpdate
type EStateUpdate struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

// GetID returns the value of ID.
func (s *EStateUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EStateUpdate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *EStateUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EStateUpdate) SetName(val string) {
	s.Name = val
}

func (*EStateUpdate) updateEStateRes() {}

// Ref: #/components/schemas/ETypeCreate
type ETypeCreate struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

// GetID returns the value of ID.
func (s *ETypeCreate) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *ETypeCreate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ETypeCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ETypeCreate) SetName(val string) {
	s.Name = val
}

func (*ETypeCreate) createETypeRes() {}

// Ref: #/components/schemas/EType_EventRead
type ETypeEventRead struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
}

// GetID returns the value of ID.
func (s *ETypeEventRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *ETypeEventRead) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *ETypeEventRead) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *ETypeEventRead) GetLocation() OptString {
	return s.Location
}

// SetID sets the value of ID.
func (s *ETypeEventRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ETypeEventRead) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *ETypeEventRead) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *ETypeEventRead) SetLocation(val OptString) {
	s.Location = val
}

func (*ETypeEventRead) readETypeEventRes() {}

// Ref: #/components/schemas/ETypeList
type ETypeList struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

// GetID returns the value of ID.
func (s *ETypeList) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *ETypeList) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ETypeList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ETypeList) SetName(val string) {
	s.Name = val
}

// Ref: #/components/schemas/ETypeRead
type ETypeRead struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

// GetID returns the value of ID.
func (s *ETypeRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *ETypeRead) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ETypeRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ETypeRead) SetName(val string) {
	s.Name = val
}

func (*ETypeRead) readETypeRes() {}

// Ref: #/components/schemas/ETypeUpdate
type ETypeUpdate struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

// GetID returns the value of ID.
func (s *ETypeUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *ETypeUpdate) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ETypeUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ETypeUpdate) SetName(val string) {
	s.Name = val
}

func (*ETypeUpdate) updateETypeRes() {}

// Ref: #/components/schemas/EcommentCreate
type EcommentCreate struct {
	ID   uuid.UUID `json:"id"`
	Body string    `json:"body"`
}

// GetID returns the value of ID.
func (s *EcommentCreate) GetID() uuid.UUID {
	return s.ID
}

// GetBody returns the value of Body.
func (s *EcommentCreate) GetBody() string {
	return s.Body
}

// SetID sets the value of ID.
func (s *EcommentCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetBody sets the value of Body.
func (s *EcommentCreate) SetBody(val string) {
	s.Body = val
}

func (*EcommentCreate) createEcommentRes() {}

// Ref: #/components/schemas/Ecomment_EventRead
type EcommentEventRead struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
}

// GetID returns the value of ID.
func (s *EcommentEventRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EcommentEventRead) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *EcommentEventRead) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *EcommentEventRead) GetLocation() OptString {
	return s.Location
}

// SetID sets the value of ID.
func (s *EcommentEventRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EcommentEventRead) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *EcommentEventRead) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *EcommentEventRead) SetLocation(val OptString) {
	s.Location = val
}

func (*EcommentEventRead) readEcommentEventRes() {}

// Ref: #/components/schemas/EcommentList
type EcommentList struct {
	ID   uuid.UUID `json:"id"`
	Body string    `json:"body"`
}

// GetID returns the value of ID.
func (s *EcommentList) GetID() uuid.UUID {
	return s.ID
}

// GetBody returns the value of Body.
func (s *EcommentList) GetBody() string {
	return s.Body
}

// SetID sets the value of ID.
func (s *EcommentList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetBody sets the value of Body.
func (s *EcommentList) SetBody(val string) {
	s.Body = val
}

// Ref: #/components/schemas/EcommentRead
type EcommentRead struct {
	ID   uuid.UUID `json:"id"`
	Body string    `json:"body"`
}

// GetID returns the value of ID.
func (s *EcommentRead) GetID() uuid.UUID {
	return s.ID
}

// GetBody returns the value of Body.
func (s *EcommentRead) GetBody() string {
	return s.Body
}

// SetID sets the value of ID.
func (s *EcommentRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetBody sets the value of Body.
func (s *EcommentRead) SetBody(val string) {
	s.Body = val
}

func (*EcommentRead) readEcommentRes() {}

// Ref: #/components/schemas/EcommentUpdate
type EcommentUpdate struct {
	ID   uuid.UUID `json:"id"`
	Body string    `json:"body"`
}

// GetID returns the value of ID.
func (s *EcommentUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetBody returns the value of Body.
func (s *EcommentUpdate) GetBody() string {
	return s.Body
}

// SetID sets the value of ID.
func (s *EcommentUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetBody sets the value of Body.
func (s *EcommentUpdate) SetBody(val string) {
	s.Body = val
}

func (*EcommentUpdate) updateEcommentRes() {}

// Ref: #/components/schemas/Ecomment_UserRead
type EcommentUserRead struct {
	ID            uuid.UUID `json:"id"`
	Age           OptInt    `json:"age"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *EcommentUserRead) GetID() uuid.UUID {
	return s.ID
}

// GetAge returns the value of Age.
func (s *EcommentUserRead) GetAge() OptInt {
	return s.Age
}

// GetName returns the value of Name.
func (s *EcommentUserRead) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *EcommentUserRead) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *EcommentUserRead) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *EcommentUserRead) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *EcommentUserRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *EcommentUserRead) SetAge(val OptInt) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *EcommentUserRead) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *EcommentUserRead) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *EcommentUserRead) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *EcommentUserRead) SetIcon(val string) {
	s.Icon = val
}

func (*EcommentUserRead) readEcommentUserRes() {}

// Ref: #/components/schemas/Event_AdminRead
type EventAdminRead struct {
	ID            uuid.UUID `json:"id"`
	Age           OptInt    `json:"age"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *EventAdminRead) GetID() uuid.UUID {
	return s.ID
}

// GetAge returns the value of Age.
func (s *EventAdminRead) GetAge() OptInt {
	return s.Age
}

// GetName returns the value of Name.
func (s *EventAdminRead) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *EventAdminRead) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *EventAdminRead) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *EventAdminRead) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *EventAdminRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *EventAdminRead) SetAge(val OptInt) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *EventAdminRead) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *EventAdminRead) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *EventAdminRead) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *EventAdminRead) SetIcon(val string) {
	s.Icon = val
}

func (*EventAdminRead) readEventAdminRes() {}

// Ref: #/components/schemas/EventCreate
type EventCreate struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
}

// GetID returns the value of ID.
func (s *EventCreate) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EventCreate) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *EventCreate) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *EventCreate) GetLocation() OptString {
	return s.Location
}

// SetID sets the value of ID.
func (s *EventCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EventCreate) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *EventCreate) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *EventCreate) SetLocation(val OptString) {
	s.Location = val
}

func (*EventCreate) createEventRes() {}

// Ref: #/components/schemas/EventList
type EventList struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
}

// GetID returns the value of ID.
func (s *EventList) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EventList) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *EventList) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *EventList) GetLocation() OptString {
	return s.Location
}

// SetID sets the value of ID.
func (s *EventList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EventList) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *EventList) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *EventList) SetLocation(val OptString) {
	s.Location = val
}

// Ref: #/components/schemas/EventRead
type EventRead struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
}

// GetID returns the value of ID.
func (s *EventRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EventRead) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *EventRead) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *EventRead) GetLocation() OptString {
	return s.Location
}

// SetID sets the value of ID.
func (s *EventRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EventRead) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *EventRead) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *EventRead) SetLocation(val OptString) {
	s.Location = val
}

func (*EventRead) readEventRes() {}

// Ref: #/components/schemas/Event_StateRead
type EventStateRead struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

// GetID returns the value of ID.
func (s *EventStateRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EventStateRead) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *EventStateRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EventStateRead) SetName(val string) {
	s.Name = val
}

func (*EventStateRead) readEventStateRes() {}

// Ref: #/components/schemas/Event_TypeRead
type EventTypeRead struct {
	ID   uuid.UUID `json:"id"`
	Name string    `json:"name"`
}

// GetID returns the value of ID.
func (s *EventTypeRead) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EventTypeRead) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *EventTypeRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EventTypeRead) SetName(val string) {
	s.Name = val
}

func (*EventTypeRead) readEventTypeRes() {}

// Ref: #/components/schemas/EventUpdate
type EventUpdate struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
}

// GetID returns the value of ID.
func (s *EventUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *EventUpdate) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *EventUpdate) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *EventUpdate) GetLocation() OptString {
	return s.Location
}

// SetID sets the value of ID.
func (s *EventUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *EventUpdate) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *EventUpdate) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *EventUpdate) SetLocation(val OptString) {
	s.Location = val
}

func (*EventUpdate) updateEventRes() {}

// Ref: #/components/schemas/Event_UsersList
type EventUsersList struct {
	ID            uuid.UUID `json:"id"`
	Age           OptInt    `json:"age"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *EventUsersList) GetID() uuid.UUID {
	return s.ID
}

// GetAge returns the value of Age.
func (s *EventUsersList) GetAge() OptInt {
	return s.Age
}

// GetName returns the value of Name.
func (s *EventUsersList) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *EventUsersList) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *EventUsersList) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *EventUsersList) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *EventUsersList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *EventUsersList) SetAge(val OptInt) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *EventUsersList) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *EventUsersList) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *EventUsersList) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *EventUsersList) SetIcon(val string) {
	s.Icon = val
}

type ListEStateOKApplicationJSON []EStateList

func (ListEStateOKApplicationJSON) listEStateRes() {}

type ListETypeOKApplicationJSON []ETypeList

func (ListETypeOKApplicationJSON) listETypeRes() {}

type ListEcommentOKApplicationJSON []EcommentList

func (ListEcommentOKApplicationJSON) listEcommentRes() {}

type ListEventOKApplicationJSON []EventList

func (ListEventOKApplicationJSON) listEventRes() {}

type ListEventUsersOKApplicationJSON []EventUsersList

func (ListEventUsersOKApplicationJSON) listEventUsersRes() {}

type ListUserEventsOKApplicationJSON []UserEventsList

func (ListUserEventsOKApplicationJSON) listUserEventsRes() {}

type ListUserOKApplicationJSON []UserList

func (ListUserOKApplicationJSON) listUserRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type R400 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R400) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R400) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R400) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R400) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R400) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R400) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R400) createEStateRes()      {}
func (*R400) createETypeRes()       {}
func (*R400) createEcommentRes()    {}
func (*R400) createEventRes()       {}
func (*R400) createUserRes()        {}
func (*R400) deleteEStateRes()      {}
func (*R400) deleteETypeRes()       {}
func (*R400) deleteEcommentRes()    {}
func (*R400) deleteEventRes()       {}
func (*R400) deleteUserRes()        {}
func (*R400) listEStateRes()        {}
func (*R400) listETypeRes()         {}
func (*R400) listEcommentRes()      {}
func (*R400) listEventRes()         {}
func (*R400) listEventUsersRes()    {}
func (*R400) listUserEventsRes()    {}
func (*R400) listUserRes()          {}
func (*R400) readEStateEventRes()   {}
func (*R400) readEStateRes()        {}
func (*R400) readETypeEventRes()    {}
func (*R400) readETypeRes()         {}
func (*R400) readEcommentEventRes() {}
func (*R400) readEcommentRes()      {}
func (*R400) readEcommentUserRes()  {}
func (*R400) readEventAdminRes()    {}
func (*R400) readEventRes()         {}
func (*R400) readEventStateRes()    {}
func (*R400) readEventTypeRes()     {}
func (*R400) readUserRes()          {}
func (*R400) updateEStateRes()      {}
func (*R400) updateETypeRes()       {}
func (*R400) updateEcommentRes()    {}
func (*R400) updateEventRes()       {}
func (*R400) updateUserRes()        {}

type R404 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R404) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R404) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R404) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R404) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R404) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R404) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R404) deleteEStateRes()      {}
func (*R404) deleteETypeRes()       {}
func (*R404) deleteEcommentRes()    {}
func (*R404) deleteEventRes()       {}
func (*R404) deleteUserRes()        {}
func (*R404) listEStateRes()        {}
func (*R404) listETypeRes()         {}
func (*R404) listEcommentRes()      {}
func (*R404) listEventRes()         {}
func (*R404) listEventUsersRes()    {}
func (*R404) listUserEventsRes()    {}
func (*R404) listUserRes()          {}
func (*R404) readEStateEventRes()   {}
func (*R404) readEStateRes()        {}
func (*R404) readETypeEventRes()    {}
func (*R404) readETypeRes()         {}
func (*R404) readEcommentEventRes() {}
func (*R404) readEcommentRes()      {}
func (*R404) readEcommentUserRes()  {}
func (*R404) readEventAdminRes()    {}
func (*R404) readEventRes()         {}
func (*R404) readEventStateRes()    {}
func (*R404) readEventTypeRes()     {}
func (*R404) readUserRes()          {}
func (*R404) updateEStateRes()      {}
func (*R404) updateETypeRes()       {}
func (*R404) updateEcommentRes()    {}
func (*R404) updateEventRes()       {}
func (*R404) updateUserRes()        {}

type R409 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R409) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R409) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R409) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R409) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R409) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R409) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R409) createEStateRes()      {}
func (*R409) createETypeRes()       {}
func (*R409) createEcommentRes()    {}
func (*R409) createEventRes()       {}
func (*R409) createUserRes()        {}
func (*R409) deleteEStateRes()      {}
func (*R409) deleteETypeRes()       {}
func (*R409) deleteEcommentRes()    {}
func (*R409) deleteEventRes()       {}
func (*R409) deleteUserRes()        {}
func (*R409) listEStateRes()        {}
func (*R409) listETypeRes()         {}
func (*R409) listEcommentRes()      {}
func (*R409) listEventRes()         {}
func (*R409) listEventUsersRes()    {}
func (*R409) listUserEventsRes()    {}
func (*R409) listUserRes()          {}
func (*R409) readEStateEventRes()   {}
func (*R409) readEStateRes()        {}
func (*R409) readETypeEventRes()    {}
func (*R409) readETypeRes()         {}
func (*R409) readEcommentEventRes() {}
func (*R409) readEcommentRes()      {}
func (*R409) readEcommentUserRes()  {}
func (*R409) readEventAdminRes()    {}
func (*R409) readEventRes()         {}
func (*R409) readEventStateRes()    {}
func (*R409) readEventTypeRes()     {}
func (*R409) readUserRes()          {}
func (*R409) updateEStateRes()      {}
func (*R409) updateETypeRes()       {}
func (*R409) updateEcommentRes()    {}
func (*R409) updateEventRes()       {}
func (*R409) updateUserRes()        {}

type R500 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R500) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R500) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R500) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R500) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R500) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R500) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R500) createEStateRes()      {}
func (*R500) createETypeRes()       {}
func (*R500) createEcommentRes()    {}
func (*R500) createEventRes()       {}
func (*R500) createUserRes()        {}
func (*R500) deleteEStateRes()      {}
func (*R500) deleteETypeRes()       {}
func (*R500) deleteEcommentRes()    {}
func (*R500) deleteEventRes()       {}
func (*R500) deleteUserRes()        {}
func (*R500) listEStateRes()        {}
func (*R500) listETypeRes()         {}
func (*R500) listEcommentRes()      {}
func (*R500) listEventRes()         {}
func (*R500) listEventUsersRes()    {}
func (*R500) listUserEventsRes()    {}
func (*R500) listUserRes()          {}
func (*R500) readEStateEventRes()   {}
func (*R500) readEStateRes()        {}
func (*R500) readETypeEventRes()    {}
func (*R500) readETypeRes()         {}
func (*R500) readEcommentEventRes() {}
func (*R500) readEcommentRes()      {}
func (*R500) readEcommentUserRes()  {}
func (*R500) readEventAdminRes()    {}
func (*R500) readEventRes()         {}
func (*R500) readEventStateRes()    {}
func (*R500) readEventTypeRes()     {}
func (*R500) readUserRes()          {}
func (*R500) updateEStateRes()      {}
func (*R500) updateETypeRes()       {}
func (*R500) updateEcommentRes()    {}
func (*R500) updateEventRes()       {}
func (*R500) updateUserRes()        {}

type UpdateEStateReq struct {
	Name  OptString `json:"name"`
	Event OptUUID   `json:"event"`
}

// GetName returns the value of Name.
func (s *UpdateEStateReq) GetName() OptString {
	return s.Name
}

// GetEvent returns the value of Event.
func (s *UpdateEStateReq) GetEvent() OptUUID {
	return s.Event
}

// SetName sets the value of Name.
func (s *UpdateEStateReq) SetName(val OptString) {
	s.Name = val
}

// SetEvent sets the value of Event.
func (s *UpdateEStateReq) SetEvent(val OptUUID) {
	s.Event = val
}

type UpdateETypeReq struct {
	Name  OptString `json:"name"`
	Event OptUUID   `json:"event"`
}

// GetName returns the value of Name.
func (s *UpdateETypeReq) GetName() OptString {
	return s.Name
}

// GetEvent returns the value of Event.
func (s *UpdateETypeReq) GetEvent() OptUUID {
	return s.Event
}

// SetName sets the value of Name.
func (s *UpdateETypeReq) SetName(val OptString) {
	s.Name = val
}

// SetEvent sets the value of Event.
func (s *UpdateETypeReq) SetEvent(val OptUUID) {
	s.Event = val
}

type UpdateEcommentReq struct {
	Body  OptString `json:"body"`
	Event OptUUID   `json:"event"`
	User  OptUUID   `json:"user"`
}

// GetBody returns the value of Body.
func (s *UpdateEcommentReq) GetBody() OptString {
	return s.Body
}

// GetEvent returns the value of Event.
func (s *UpdateEcommentReq) GetEvent() OptUUID {
	return s.Event
}

// GetUser returns the value of User.
func (s *UpdateEcommentReq) GetUser() OptUUID {
	return s.User
}

// SetBody sets the value of Body.
func (s *UpdateEcommentReq) SetBody(val OptString) {
	s.Body = val
}

// SetEvent sets the value of Event.
func (s *UpdateEcommentReq) SetEvent(val OptUUID) {
	s.Event = val
}

// SetUser sets the value of User.
func (s *UpdateEcommentReq) SetUser(val OptUUID) {
	s.User = val
}

type UpdateEventReq struct {
	Name     OptString   `json:"name"`
	Detail   OptString   `json:"detail"`
	Location OptString   `json:"location"`
	State    OptUUID     `json:"state"`
	Type     OptUUID     `json:"type"`
	Admin    OptUUID     `json:"admin"`
	Users    []uuid.UUID `json:"users"`
}

// GetName returns the value of Name.
func (s *UpdateEventReq) GetName() OptString {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *UpdateEventReq) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *UpdateEventReq) GetLocation() OptString {
	return s.Location
}

// GetState returns the value of State.
func (s *UpdateEventReq) GetState() OptUUID {
	return s.State
}

// GetType returns the value of Type.
func (s *UpdateEventReq) GetType() OptUUID {
	return s.Type
}

// GetAdmin returns the value of Admin.
func (s *UpdateEventReq) GetAdmin() OptUUID {
	return s.Admin
}

// GetUsers returns the value of Users.
func (s *UpdateEventReq) GetUsers() []uuid.UUID {
	return s.Users
}

// SetName sets the value of Name.
func (s *UpdateEventReq) SetName(val OptString) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *UpdateEventReq) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *UpdateEventReq) SetLocation(val OptString) {
	s.Location = val
}

// SetState sets the value of State.
func (s *UpdateEventReq) SetState(val OptUUID) {
	s.State = val
}

// SetType sets the value of Type.
func (s *UpdateEventReq) SetType(val OptUUID) {
	s.Type = val
}

// SetAdmin sets the value of Admin.
func (s *UpdateEventReq) SetAdmin(val OptUUID) {
	s.Admin = val
}

// SetUsers sets the value of Users.
func (s *UpdateEventReq) SetUsers(val []uuid.UUID) {
	s.Users = val
}

type UpdateUserReq struct {
	Age           OptInt      `json:"age"`
	Name          OptString   `json:"name"`
	Authenticated OptBool     `json:"authenticated"`
	Mail          OptString   `json:"mail"`
	Icon          OptString   `json:"icon"`
	Events        []uuid.UUID `json:"events"`
}

// GetAge returns the value of Age.
func (s *UpdateUserReq) GetAge() OptInt {
	return s.Age
}

// GetName returns the value of Name.
func (s *UpdateUserReq) GetName() OptString {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *UpdateUserReq) GetAuthenticated() OptBool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *UpdateUserReq) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *UpdateUserReq) GetIcon() OptString {
	return s.Icon
}

// GetEvents returns the value of Events.
func (s *UpdateUserReq) GetEvents() []uuid.UUID {
	return s.Events
}

// SetAge sets the value of Age.
func (s *UpdateUserReq) SetAge(val OptInt) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *UpdateUserReq) SetName(val OptString) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *UpdateUserReq) SetAuthenticated(val OptBool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *UpdateUserReq) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *UpdateUserReq) SetIcon(val OptString) {
	s.Icon = val
}

// SetEvents sets the value of Events.
func (s *UpdateUserReq) SetEvents(val []uuid.UUID) {
	s.Events = val
}

// Ref: #/components/schemas/UserCreate
type UserCreate struct {
	ID            uuid.UUID `json:"id"`
	Age           OptInt    `json:"age"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *UserCreate) GetID() uuid.UUID {
	return s.ID
}

// GetAge returns the value of Age.
func (s *UserCreate) GetAge() OptInt {
	return s.Age
}

// GetName returns the value of Name.
func (s *UserCreate) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *UserCreate) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *UserCreate) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *UserCreate) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *UserCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *UserCreate) SetAge(val OptInt) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *UserCreate) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *UserCreate) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *UserCreate) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *UserCreate) SetIcon(val string) {
	s.Icon = val
}

func (*UserCreate) createUserRes() {}

// Ref: #/components/schemas/User_EventsList
type UserEventsList struct {
	ID       uuid.UUID `json:"id"`
	Name     string    `json:"name"`
	Detail   OptString `json:"detail"`
	Location OptString `json:"location"`
}

// GetID returns the value of ID.
func (s *UserEventsList) GetID() uuid.UUID {
	return s.ID
}

// GetName returns the value of Name.
func (s *UserEventsList) GetName() string {
	return s.Name
}

// GetDetail returns the value of Detail.
func (s *UserEventsList) GetDetail() OptString {
	return s.Detail
}

// GetLocation returns the value of Location.
func (s *UserEventsList) GetLocation() OptString {
	return s.Location
}

// SetID sets the value of ID.
func (s *UserEventsList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *UserEventsList) SetName(val string) {
	s.Name = val
}

// SetDetail sets the value of Detail.
func (s *UserEventsList) SetDetail(val OptString) {
	s.Detail = val
}

// SetLocation sets the value of Location.
func (s *UserEventsList) SetLocation(val OptString) {
	s.Location = val
}

// Ref: #/components/schemas/UserList
type UserList struct {
	ID            uuid.UUID `json:"id"`
	Age           OptInt    `json:"age"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *UserList) GetID() uuid.UUID {
	return s.ID
}

// GetAge returns the value of Age.
func (s *UserList) GetAge() OptInt {
	return s.Age
}

// GetName returns the value of Name.
func (s *UserList) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *UserList) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *UserList) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *UserList) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *UserList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *UserList) SetAge(val OptInt) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *UserList) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *UserList) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *UserList) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *UserList) SetIcon(val string) {
	s.Icon = val
}

// Ref: #/components/schemas/UserRead
type UserRead struct {
	ID            uuid.UUID `json:"id"`
	Age           OptInt    `json:"age"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *UserRead) GetID() uuid.UUID {
	return s.ID
}

// GetAge returns the value of Age.
func (s *UserRead) GetAge() OptInt {
	return s.Age
}

// GetName returns the value of Name.
func (s *UserRead) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *UserRead) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *UserRead) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *UserRead) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *UserRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *UserRead) SetAge(val OptInt) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *UserRead) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *UserRead) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *UserRead) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *UserRead) SetIcon(val string) {
	s.Icon = val
}

func (*UserRead) readUserRes() {}

// Ref: #/components/schemas/UserUpdate
type UserUpdate struct {
	ID            uuid.UUID `json:"id"`
	Age           OptInt    `json:"age"`
	Name          string    `json:"name"`
	Authenticated bool      `json:"authenticated"`
	Mail          OptString `json:"mail"`
	Icon          string    `json:"icon"`
}

// GetID returns the value of ID.
func (s *UserUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetAge returns the value of Age.
func (s *UserUpdate) GetAge() OptInt {
	return s.Age
}

// GetName returns the value of Name.
func (s *UserUpdate) GetName() string {
	return s.Name
}

// GetAuthenticated returns the value of Authenticated.
func (s *UserUpdate) GetAuthenticated() bool {
	return s.Authenticated
}

// GetMail returns the value of Mail.
func (s *UserUpdate) GetMail() OptString {
	return s.Mail
}

// GetIcon returns the value of Icon.
func (s *UserUpdate) GetIcon() string {
	return s.Icon
}

// SetID sets the value of ID.
func (s *UserUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAge sets the value of Age.
func (s *UserUpdate) SetAge(val OptInt) {
	s.Age = val
}

// SetName sets the value of Name.
func (s *UserUpdate) SetName(val string) {
	s.Name = val
}

// SetAuthenticated sets the value of Authenticated.
func (s *UserUpdate) SetAuthenticated(val bool) {
	s.Authenticated = val
}

// SetMail sets the value of Mail.
func (s *UserUpdate) SetMail(val OptString) {
	s.Mail = val
}

// SetIcon sets the value of Icon.
func (s *UserUpdate) SetIcon(val string) {
	s.Icon = val
}

func (*UserUpdate) updateUserRes() {}
