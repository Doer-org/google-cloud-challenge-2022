// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EstatesColumns holds the columns for the "estates" table.
	EstatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "event_state", Type: field.TypeUUID, Unique: true},
	}
	// EstatesTable holds the schema information for the "estates" table.
	EstatesTable = &schema.Table{
		Name:       "estates",
		Columns:    EstatesColumns,
		PrimaryKey: []*schema.Column{EstatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "estates_events_state",
				Columns:    []*schema.Column{EstatesColumns[2]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// EtypesColumns holds the columns for the "etypes" table.
	EtypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "event_type", Type: field.TypeUUID, Unique: true},
	}
	// EtypesTable holds the schema information for the "etypes" table.
	EtypesTable = &schema.Table{
		Name:       "etypes",
		Columns:    EtypesColumns,
		PrimaryKey: []*schema.Column{EtypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "etypes_events_type",
				Columns:    []*schema.Column{EtypesColumns[2]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// EcommentsColumns holds the columns for the "ecomments" table.
	EcommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "body", Type: field.TypeString},
		{Name: "ecomment_event", Type: field.TypeUUID, Nullable: true},
		{Name: "ecomment_user", Type: field.TypeUUID, Nullable: true},
	}
	// EcommentsTable holds the schema information for the "ecomments" table.
	EcommentsTable = &schema.Table{
		Name:       "ecomments",
		Columns:    EcommentsColumns,
		PrimaryKey: []*schema.Column{EcommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ecomments_events_event",
				Columns:    []*schema.Column{EcommentsColumns[2]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ecomments_users_user",
				Columns:    []*schema.Column{EcommentsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EventsColumns holds the columns for the "events" table.
	EventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "detail", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
	}
	// EventsTable holds the schema information for the "events" table.
	EventsTable = &schema.Table{
		Name:       "events",
		Columns:    EventsColumns,
		PrimaryKey: []*schema.Column{EventsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "age", Type: field.TypeInt, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 20},
		{Name: "authenticated", Type: field.TypeBool, Default: false},
		{Name: "mail", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "icon", Type: field.TypeString, Size: 200},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserEventsColumns holds the columns for the "user_events" table.
	UserEventsColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "event_id", Type: field.TypeUUID},
	}
	// UserEventsTable holds the schema information for the "user_events" table.
	UserEventsTable = &schema.Table{
		Name:       "user_events",
		Columns:    UserEventsColumns,
		PrimaryKey: []*schema.Column{UserEventsColumns[0], UserEventsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_events_user_id",
				Columns:    []*schema.Column{UserEventsColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_events_event_id",
				Columns:    []*schema.Column{UserEventsColumns[1]},
				RefColumns: []*schema.Column{EventsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EstatesTable,
		EtypesTable,
		EcommentsTable,
		EventsTable,
		UsersTable,
		UserEventsTable,
	}
)

func init() {
	EstatesTable.ForeignKeys[0].RefTable = EventsTable
	EtypesTable.ForeignKeys[0].RefTable = EventsTable
	EcommentsTable.ForeignKeys[0].RefTable = EventsTable
	EcommentsTable.ForeignKeys[1].RefTable = UsersTable
	UserEventsTable.ForeignKeys[0].RefTable = UsersTable
	UserEventsTable.ForeignKeys[1].RefTable = EventsTable
}
